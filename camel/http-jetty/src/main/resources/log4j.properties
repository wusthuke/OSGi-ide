log4j.rootLogger=ERROR,CONSOLE

log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%-5p %x - %m   %c.[%t] %L %n

log4j.appender.CC=org.apache.log4j.ConsoleAppender
log4j.appender.CC.layout=org.apache.log4j.PatternLayout
log4j.appender.CC.layout.ConversionPattern=%-5p %x - %m   %c.[%t] %n

log4j.logger.com.huke.osgi.camel=INFO,CC

# log4j.logger.com.huke.osgi.camel=INFO,CONSOLE,CC
# ConversionPattern参数的格式含义
# %c 输出日志信息所属的类的全名
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出类似：2002-10-18- 22：10：28
# %f 输出日志信息所属的类的类名
# %l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行
# %m 输出代码中指定的信息，如log(message)中的message
# %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推
# %r 输出自应用启动到输出该日志信息所耗费的毫秒数
# %t 输出产生该日志事件的线程名
